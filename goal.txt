[inf]

String - 12/12                       22/6/14

Array - 11/12                        22/6/15  
Two Pointer, Silding Window - 0/6    22/6/16 ??
HashMap, TreeSet - 0/5               22/6/17 ??
Stack,Queue - 0/8                    22/6/    
Sorting and Searching - 0/10         22/6
Recursive,Tree,Gragh - 0/14          22/6
DFS, BFS - 0/15                      22/6
Greedy - 0/8                         22/6
dynamic Programming - 0/6            22/6



[alg]

기본 하루 3개
강의를 많이 듣는다면 1개


6/09 백준 4
6/10 백준 3
6/13 백준 4
6/14 백준2회차문제 1 
6/15 백준 1
6/17 백준 2
6/20 백준 3
6/21 백준 2
6/22 백준 1


// 다시 도전하기 => 2346(큐로 풀어보기)
                   1966(다시풀기.. 개어렵) 
                   17298(너무 돌아갔다... 다시풀기)


/*
 * 방법 1
 * LinkedList는 Deque(Queue를 상속받고 있음)도 구현하고 있기 때문에
 * LinkedList로 선언해주어 사용 할 수 있다.
 */
LinkedList<Integer> q = new LinkedList<>();
q.offer();	// push
q.pop();	// pop
q.size();	// size
q.isEmpty();	// empty
q.peek();	// front
q.peekLast();	// back
 
 
/*
 * 방법 2
 * Deque 인터페이스로 선언한 뒤
 * LinkedList나 ArrayDeque로 생성하여 이용 할 수 있음
 */
Deque<Integer> q = new LinkedList<>();
Deque<Integer> q = new ArrayDeque<>();
 
// 메소드는 동일함
q.offer();	// push
q.pop();	// pop
q.size();	// size
q.isEmpty();	// empty
q.peek();	// front
q.peekLast();	// back

offerLast()
pollFirst()
